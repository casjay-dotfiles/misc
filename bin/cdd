#!/usr/bin/env bash
cdd_main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  PROG="$(basename $0)"
  VERSION="202103230741-git"
  USER="${SUDO_USER:-${USER}}"
  HOME="${USER_HOME:-${HOME}}"
  SRC_DIR="${BASH_SOURCE%/*}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  #set opts

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  ##@Version       : 202103230741-git
  # @Author        : Jason Hempstead
  # @Contact       : jason@casjaysdev.com
  # @License       : WTFPL
  # @ReadME        : cdd --help
  # @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
  # @Created       : Tuesday, Mar 23, 2021 07:41 EDT
  # @File          : cdd
  # @Description   : cd into directories using shortcuts
  # @TODO          :
  # @Other         :
  # @Resource      :
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Main function file
  if [ -f "$SRC_DIR/functions.bash" ]; then
    FUNCTIONS_DIR="$SRC_DIR"
    . "$FUNCTIONS_DIR/functions.bash"
  elif [ -f "$HOME/.local/bin/functions.bash" ]; then
    FUNCTIONS_DIR="$HOME/.local/bin"
    . "$FUNCTIONS_DIR/functions.bash"
  else
    printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # helper functions - See github.com/dfmgr/misc/bin/functions.bash
  __version() { app_version; }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __help() {
    app_help "4" "Usage: cdd  -  cdd --version" \
      "-c, --config           -  create config file" \
      "-m, --modify           -  add an alias | -m p Projects" \
      "-r, --remove           -  remove an alias | -r Projects" \
      "-a, --all              -  show all options" \
      "-l, --list             -  used by completions" \
      "-v, --version          -  display version" \
      "-h, --help             -  display help"
    exit $?
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __gen_config() {
    printf_green "Generating the config file in"
    printf_green "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE"
    local tempfile="$CDD_CONFIG_DIR/$CDD_CONFIG_FILE.bak"
    [ -d "$CDD_CONFIG_DIR" ] || mkdir -p "$CDD_CONFIG_DIR"
    [ -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" ] && cp -Rf "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" "$tempfile"
    [ -d "$CDD_CONFIG_DIR" ] || mkdir -p "$CDD_CONFIG_DIR"
    [ -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" ] &&
      cp -Rf "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE.$$"
    cat <<EOF >"$CDD_CONFIG_DIR/$CDD_CONFIG_FILE"
# Settings for cdd
testing = "${TMPDIR:-/tmp}/testing"
projects = "$HOME/Projects"
pictures = "$HOME/Pictures"
music = "$HOME/Music"
share = "$HOME/local/share"

EOF

    if [ -f "$tempfile" ] && [ "$(<"$tempfile")" != "$(<"$CDD_CONFIG_DIR/$CDD_CONFIG_FILE")" ]; then
      cat "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" | grep ^'#' >>"$tempfile" && mv "$tempfile" "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE"
    fi

    if [ -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" ]; then
      printf_green "Your config file for cdd has been created"
      true
    else
      printf_red "Failed to create the config file"
      false
    fi
  }
  cd_goto() {
    export PS1_ADD="$PS1_ADD cdd: $1"
    if [ ! -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" ]; then __config_gen && main "$@"; fi
    local dir="$(list_aliases "folder" "$1")"
    [ -n "$dir" ] || printf_exit "Please specify a directory - see $APPNAME -l"
    [ -d "$dir" ] || printf_mkdir "$dir"
    printf_green "entering $dir"
    printf_green "Type exit to return to your previous directory"
    [ -d "$dir" ] && builtin cd $dir && export CDD_STATUS="running"
    bash -l || return 1
  }
  add_alias() {
    if ! grep -q "$1" "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE"; then
      printf_green "Adding the alias $1 to config"
      printf "%s\n" "$1 = "$2"" >>""$CDD_CONFIG_DIR/$CDD_CONFIG_FILE""
    else
      printf_red "It appears that $1 has already been added"
    fi
    return $?
  }
  rm_alias() {
    printf_green "Removing the alias $1 from config"
    cat "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" | grep -v ^"$1" >"$CDD_CONFIG_DIR/$CDD_CONFIG_FILE.tmp" &&
      mv -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE.tmp" "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" || return 1
    return $?
  }
  list_aliases() {
    if [ ! -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" ]; then __config_gen &>/dev/null; fi
    if [ "$1" = "folder" ]; then
      shift 1
      grep -E ^''$1' =*..*'$ "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" | awk -F'= ' '{print $2}' | sed -e 's#"##g' 2>/dev/null | grep '^' | grep -Ev '^$|^#'
    else
      grep -E ^''$1' =*..*'$ "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" | awk -F' =' '{print $1,$2}' | sed -e 's#"##g' 2>/dev/null | grep '^' | grep -Ev '^$|^#'
    fi
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  [ -z "$CDD_STATUS" ] || printf_exit "cdd already appears to be active "
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Defaults
  local exitCode="" CDD_CONFIG_FILE="" CDD_CONFIG_DIR="" CDD_OPTIONS_DIR=""
  local CDD_CONFIG_FILE="settings.conf"
  local CDD_CONFIG_DIR="$HOME/.config/misc/configs"
  local CDD_OPTIONS_DIR="$HOME/.local/share/misc/options/cdd"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Argument/Option settings
  local SETARGS="${*}"
  local SHORTOPTS="a,l,c,v,h,m::,r:,f"
  local LONGOPTS="all,list,config,version,help,modify::,remove,function"
  local ARRAY=""
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Generate Files
  [ -f "$CDD_OPTIONS_DIR/options" ] || __list_options "$CDD_OPTIONS_DIR" "$ARRAY" &>/dev/null
  [ -f "$CDD_OPTIONS_DIR/array" ] || __list_array "$CDD_OPTIONS_DIR" &>/dev/null
  [ -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" ] || __gen_config &>/dev/null
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Import config
  #[ -f "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE" ] && . "$CDD_CONFIG_DIR/$CDD_CONFIG_FILE"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Check for required applications
  cmd_exists --error bash || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  local setopts=$(getopt -o "$SHORTOPTS" --long "$LONGOPTS" -n "$PROG" -- "$@" 2>/dev/null)
  eval set -- "$setopts" 2>/dev/null
  while :; do
    case $1 in
    -a | --all)
      __list_options "$CDD_OPTIONS_DIR" "$ARRAY"
      exit $?
      ;;
    -l | --list)
      __list_array "$CDD_OPTIONS_DIR"
      exit $?
      ;;
    -v | --version)
      __version
      exit $?
      ;;
    -h | --help)
      __help
      exit $?
      ;;
    -c | --config)
      __gen_config
      exit $?
      ;;
    -r | --remove)
      rm_alias "$2"
      shift 1
      exit $?
      ;;
    -m | --modify)
      shift 2
      add_alias "$2" "$3"
      exit $?
      ;;
    -f | --function) prinf_green 'function_name() { $(type -P $APPNAME) "$@"; }' ;;
    --)
      shift 1
      break
      ;;
      #*) break ;;
    esac
    shift
  done
  set -- "$SETARGS"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  cd_goto "$1"

  # lets exit with code
  return "${exitCode:-$?}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
cdd_main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
