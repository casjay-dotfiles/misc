#!/usr/bin/env bash
countdown() {
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="countdown"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031120210605-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : countdown --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Thursday, Mar 11, 2021 06:05 EST
# @File          : countdown
# @Description   : shows up/down seconds counter. Exits and produces a sound if reaches zero
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
__version() { app_version; }
__help() {
  app_help "Usage: countdown howLong  -  countdown 300" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
  if [ -f "$SRC_DIR/functions.bash" ]; then local DIR="$SRC_DIR"; else local DIR="$HOME/.local/bin"; fi
  if [[ -f "$DIR/functions.bash" ]]; then
    . "$DIR/functions.bash"
  else
    printf "\t\t\\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case $1 in
    -v | --version) __version ;;
    -h | --help) __help ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  cmd_exists --error showbanner || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  local d="$1"
  typeset ts="$(($(date +%s) + ${1:-0} - 1))"
  export ts
  typeset p1="d=$(($(date +%s) - $ts));[ $d -lt 0 ] && d=$((-d));"
  typeset p2="[ $d -eq 0 ] && exit 1;"
  typeset p3="date -u -d @"$d" +"%H.%M.%S""
  showbanner -t.5 "$p1$p2$p3"
  typeset status="$?"
  eval "$p1$p3"
  if [[ "$status" -eq 8 ]]; then
    notifications "Timer" "Your timer has gone off"
    if [[ -f "$(command -v speaker-test)" ]]; then
      speaker-test -t sine -f 1500 -S 70 -p 10000 -l 1 &>/dev/null
    elif [[ -f "$(command -v say)" ]]; then
      say "Your timer is going off"
    fi
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
countdown "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end

