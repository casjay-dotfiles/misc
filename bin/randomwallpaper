#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : randomwallpaper
# @Created     : 08/18/2020
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : Set a random wallpaper
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function

randomwallpaper() {

  DIR="${BASH_SOURCE%/*}"
  if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi
  if [[ -f "$DIR/functions.bash" ]]; then
    source "$DIR/functions.bash"
  else
    echo "\t\tCouldn't source the functions file"
    exit 1
  fi

  addtocrontab() {
    [ "$1" = "--help" ] && printf_help "addtocrontab "*/5 * * * *" "echo hello"" #Run every 5 minutes
    local frequency="$1"
    local command="bash -c 'logr cron $2'"
    local job="$frequency $command"
    cat <(grep -F -i -v "$command" <(crontab -l)) <(echo "$job") | crontab - >/dev/null 2>&1 &&
      printf_green "Successfully added $2 to users crontab" || printf_exit "Failed to add $2 to crontab"
    exit $?
  }

  removecrontab() {
    crontab -l | grep -v -F "$command" | crontab - >/dev/null 2>&1 &&
      printf_green "Successfully removed $2 from users crontab" || printf_exit "Failed to remove $2 from crontab"
    exit $?
  }

  [ ! "$1" = "--help" ] || printf_help "Usage: randomwallpaper\n\t\t$APPNAME --add  |  Add to cron\n\t\t$APPNAME --remove  |  Remove from cron"
  if [ "$1" = "--add" ]; then addtocrontab "*/5 * * * *" "$APPNAME"; fi
  if [ "$1" = "--remove" ]; then removecrontab "$APPNAME"; fi

  send_notify_wp() {
    command -v notify-send >/dev/null 2>&1 &&
      notify-send "Wallpaper Changer" "Wallpaper has been changed to $SHORTNAME" ||
      notify-send "Wallpaper Changer" "Failed to change the wallpaper"
  }

  xfce_change_wp() {
    xfconf-query --channel xfce4-desktop --list | grep last-image | while read path; do
      xfconf-query --channel xfce4-desktop --property "$path" --set "$1"
    done
  }

  [ -n "$WALLPAPERS" ] || exit 1

  RAND=$(find "$WALLPAPERS" -type f -iname "*.jpg" -or -iname "*.jpeg" -or -iname "*.png" -or -iname "*.tif" -or -iname "*.bmp" -or -iname "*.gif" -not -path "*/.git/*" 2>/dev/null | sort -R | head -1)
  SHORTNAME="$(echo "${RAND/$WALLPAPERS/}" | sed 's#^/##g')"

  [ -n "$RAND" ] || exit 1
  if cmd_exists variety >/dev/null 2>&1; then
    variety --set="$RAND" >/dev/null 2>&1 && send_notify_wp

  elif cmd_exists feh >/dev/null 2>&1; then
    feh --bg-fill "$RAND" >/dev/null 2>&1 && send_notify_wp

  elif cmd_exists xwallpaper >/dev/null 2>&1; then
    xwallpaper --maximize "$RAND" >/dev/null 2>&1 && send_notify_wp

  elif cmd_exists xfconf-query >/dev/null 2>&1 && [[ "$DESKTOP_SESSION" =~ "xfce4" ]]; then
    xfce_change_wp "$RAND" >/dev/null 2>&1 && send_notify_wp

  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
randomwallpaper "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
