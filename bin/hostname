#!/usr/bin/env bash
main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  PROG="hostname"
  USER="${SUDO_USER:-${USER}}"
  HOME="${USER_HOME:-${HOME}}"
  SRC_DIR="${BASH_SOURCE%/*}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  #set opts

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  ##@Version       : 031120210730-git
  # @Author        : Jason Hempstead
  # @Contact       : jason@casjaysdev.com
  # @License       : WTFPL
  # @ReadME        : hostname --help
  # @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
  # @Created       : Thursday, Mar 11, 2021 07:30 EST
  # @File          : hostname
  # @Description   : Set system hostname
  # @TODO          :
  # @Other         :
  # @Resource      :
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Main function
  __version() { app_version; }
  __help() {
    app_help "usage: hostname" \
      "-r, --remove           -  remove cache files" \
      "-f, --full             -  display full hostname" \
      "-s, --short            -  display short hostname" \
      "-d, --domain           -  display domain name" \
      "-v, --version          -  display version" \
      "-h, --help             -  display help"
  }
  if [ -f "$SRC_DIR/functions.bash" ]; then local DIR="$SRC_DIR"; else local DIR="$HOME/.local/bin"; fi
  if [[ -f "$DIR/functions.bash" ]]; then
    . "$DIR/functions.bash"
  else
    printf "\t\t\\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ -f "/usr/local/bin/hostname" ]; then
    /usr/local/bin/hostname "$@"
    exit $?
  fi
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  -r | --remove)
    { [ -f "$HOSTNAME_CACHE_DIR/name" ] && rm -Rf "$HOSTNAME_CACHE_DIR/name"; } &&
      { [ -f "$HOSTNAME_CACHE_DIR/full" ] && rm -Rf "$HOSTNAME_CACHE_DIR/full"; } &&
      { [ -f "$HOSTNAME_CACHE_DIR/short" ] && rm -Rf "$HOSTNAME_CACHE_DIR/short"; } &&
      { [ -f "$HOSTNAME_CACHE_DIR/domain" ] && rm -Rf "$HOSTNAME_CACHE_DIR/domain"; } &&
      { __hostname &>/dev/null && printf_exit 2 0 "Removed the files from $HOSTNAME_CACHE_DIR"; } ||
      printf_exit 1 1 "failed to remove the cache files"
    ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __hostname() {
    local hostnamecli hostnamecmd hostnamefcmd hostnamescmd hostnamedcmd PATH
    local PATH="/usr/bin:/usr/sbin:/bin:/sbin:/usr/local/bin"
    if [ -f "$(type -P hostname 2>/dev/null)" ]; then
      hostnamecli="$(type -P hostname)"
      hostnamecmd="$($hostnamecli "-f" 2>/dev/null | grep '^')"
      hostnamefcmd="$($hostnamecli "-f" 2>/dev/null | grep '^')"
      hostnamescmd="$($hostnamecli "-s" 2>/dev/null | grep '^')"
      if [[ "$hostnamecmd" =~ .local$ ]]; then hostnamedcmd="local"; else
        hostnamedcmd="$($hostnamecli "-d" 2>/dev/null | grep '^')"
      fi
      [ -f "$HOSTNAME_CACHE_DIR/name" ] || echo "$hostnamecmd" >"$HOSTNAME_CACHE_DIR/name"
      [ -f "$HOSTNAME_CACHE_DIR/full" ] || echo "$hostnamefcmd" >"$HOSTNAME_CACHE_DIR/full"
      [ -f "$HOSTNAME_CACHE_DIR/short" ] || echo "$hostnamescmd" >"$HOSTNAME_CACHE_DIR/short"
      [ -f "$HOSTNAME_CACHE_DIR/domain" ] || echo "$hostnamedcmd" >"$HOSTNAME_CACHE_DIR/domain"
      $hostnamecli "$@" 2>/dev/null | grep '^'
    elif [ -f "$(type -P hostnamectl 2>/dev/null)" ]; then
      shift $#
      hostnamecli="$(type -P hostnamectl)"
      hostnamecmd="$($hostnamecli | grep 'hostname:' | grep -v '^n/a' | awk '{print $3}' 2>/dev/null | grep '^')"
      hostnamefcmd="$($hostnamecli | grep 'hostname:' | grep -v '^n/a' | awk '{print $3}' 2>/dev/null | grep '^')"
      hostnamescmd="$($hostnamecli | grep 'hostname:' | grep -v '^n/a' | awk '{print $3}' | sed 's#\..*##g' 2>/dev/null | grep '^')"
      if [[ "$hostnamecmd" =~ .local$ ]]; then hostnamedcmd="local"; else
        hostnamedcmd="$($hostnamecli | grep 'hostname:' | grep -v '^n/a' | awk -F. '{print $(NF-1) "." $NF}' 2>/dev/null | grep '^')"
      fi
      [ -f "$HOSTNAME_CACHE_DIR/name" ] || $hostnamecmd >"$HOSTNAME_CACHE_DIR/name"
      [ -f "$HOSTNAME_CACHE_DIR/full" ] || $hostnamescmd >"$HOSTNAME_CACHE_DIR/full"
      [ -f "$HOSTNAME_CACHE_DIR/short" ] || $hostnamefcmd >"$HOSTNAME_CACHE_DIR/short"
      $hostnamecli 2>/dev/null | grep 'hostname:' | grep -v '^n/a' | awk '{print $3}' | grep '^'
    fi
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Set additional variables
  HOSTNAME_CACHE_DIR="$HOME/.cache/hostname"
  mkdir -p "$HOSTNAME_CACHE_DIR" &>/dev/null
  if [ -d "/etc/hostname.d/files" ]; then
    cp -Rf "/etc/hostname.d/files/." "$HOSTNAME_CACHE_DIR/" &>/dev/null
  fi
  if [ -f /etc/hostname ]; then
    hostname="$(</etc/hostname)"
  elif [ -f "$HOSTNAME_CACHE_DIR/name" ]; then
    hostname="$(<"$HOSTNAME_CACHE_DIR/name")"
  else
    hostname=""
  fi
  [ -f "$HOSTNAME_CACHE_DIR/full" ] && hostnamef="$(<"$HOSTNAME_CACHE_DIR/full")" || hostnamef=""
  [ -f "$HOSTNAME_CACHE_DIR/short" ] && hostnames="$(<"$HOSTNAME_CACHE_DIR/short")" || hostnames=""
  [ -f "$HOSTNAME_CACHE_DIR/domain" ] && hostnamed="$(<"$HOSTNAME_CACHE_DIR/domain")" || hostnamed=""
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Main application
  case "$1" in
  -f | --full)
    shift 1
    { [ -n "$hostnamef" ] && printf '%s\n' "$hostnamef"; } || __hostname "-f"
    ;;
  -s | --short)
    shift 1
    { [ -n "$hostnames" ] && printf '%s\n' "$hostnames"; } || __hostname "-s"
    ;;
  -d | --domain)
    shift 1
    { [ -n "$hostnamed" ] && printf '%s\n' "$hostnamed"; } || __hostname "-d"
    ;;
  *)
    { [ -n "$hostname" ] && printf '%s\n' "$hostname"; } || __hostname "$@"
    ;;
  esac
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
