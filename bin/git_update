#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="git_update"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031120210721-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : git_update --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Thursday, Mar 11, 2021 07:21 EST
# @File          : git_update
# @Description   : update the git repo
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main function
__version() { app_version; }
__help() {
  app_help "Usage: git_update dir" \
    "-v, --version          -  display version" \
    "-h, --help             -  display help"
}
main() {
  if [ -f "$SRC_DIR/functions.bash" ]; then local DIR="$SRC_DIR"; else local DIR="$HOME/.local/bin"; fi
  if [[ -f "$DIR/functions.bash" ]]; then
    . "$DIR/functions.bash"
  else
    printf "\t\t\\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ -d "$1" ]; then
    MYCURRDIR="$1"
    shift 1
  elif [ "$1" = "-d" ] || [ "$1" = "-dir" ] || [ "$1" = "--dir" ]; then
    MYCURRDIR="$2"
    shift 2
    [ -d "$MYCURRDIR" ] || printf_exit "$MYCURRDIR doesn't seem to be a directory"
  else
    MYCURRDIR="$PWD"
  fi
  if [ "$MYCURRDIR" = "." ]; then MYCURRDIR="$(dirname ".")"; fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __git() { am_i_online && git -C "$MYCURRDIR" pull -qf &>/dev/null && return 0 || return 1; }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case $1 in
  -v | --version) __version ;;
  -h | --help) __help ;;
  esac
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ -d "$MYCURRDIR/.git" ]; then
    printf_green "Updating the repo in $MYCURRDIR"
    if __git; then
      printf_green "Updating the repo has succeeded"
    else
      printf_red "Updating then repo has failed"
      exitCode=1
    fi
  else
    printf_red "$MYCURRDIR doesn't seem to be a git repo"
    exitCode=1
  fi
  return ${exitCode:-$?}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
